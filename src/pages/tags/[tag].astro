---
import Layout from "../../layouts/Layout.astro";
import { getCollection } from "astro:content";
import { UNIFIED_TAGS } from "../../content/config";

export async function getStaticPaths() {
  const posts = await getCollection("blog");

  // Create a path for each tag
  const tagPaths = UNIFIED_TAGS.map((tag) => {
    const postsWithTag = posts.filter((post) => post.data.tags?.includes(tag));

    return {
      params: {
        tag: tag.toLowerCase().replace(/\s+/g, "-").replace(/[&]/g, "and"),
      },
      props: {
        tag,
        posts: postsWithTag.sort((a, b) => {
          const dateA = new Date(a.data.date);
          const dateB = new Date(b.data.date);
          return dateB.getTime() - dateA.getTime();
        }),
      },
    };
  });

  return tagPaths;
}

const { tag, posts } = Astro.props;
---

<Layout title={`${tag} - Metaduck`}>
  <div class="max-w-4xl mx-auto">
    <div class="mb-8">
      <a
        href="/blog"
        class="text-green-400 hover:text-green-300 transition-colors font-['Orbitron'] text-sm tracking-wide mb-4 inline-block"
      >
        ← Back to Blog
      </a>
      <h1
        class="text-4xl font-bold text-green-400 mb-2 font-['Orbitron'] tracking-wider"
      >
        {tag}
      </h1>
      <p class="text-green-300/70 text-lg">
        {posts.length} article{posts.length === 1 ? "" : "s"} tagged with "{
          tag
        }"
      </p>
    </div>

    {
      posts.length > 0 ? (
        <div class="grid gap-8">
          {posts.map((post) => (
            <article class="sci-fi-card">
              <div class="flex flex-col md:flex-row">
                {post.data.image && (
                  <div class="md:w-1/3 overflow-hidden">
                    <img
                      src={post.data.image}
                      alt={post.data.title}
                      class="w-full h-48 md:h-full object-cover rounded-lg"
                    />
                  </div>
                )}
                <div class={`${post.data.image ? "md:w-2/3" : "w-full"} p-6`}>
                  <h2 class="text-2xl font-bold text-green-400 mb-3 font-['Orbitron'] tracking-wide">
                    <a
                      href={`/${post.slug}`}
                      class="hover:text-green-300 transition-colors"
                    >
                      {post.data.title}
                    </a>
                  </h2>
                  <div class="flex items-center text-green-300/70 mb-4 font-mono text-sm">
                    <span>{post.data.author}</span>
                    <span class="mx-2 text-orange-400">•</span>
                    <time datetime={post.data.date.toISOString()}>
                      {new Date(post.data.date).toLocaleDateString("en-US", {
                        year: "numeric",
                        month: "long",
                        day: "numeric",
                      })}
                    </time>
                  </div>
                  <p class="text-green-300 mb-6 leading-relaxed">
                    {post.data.description}
                  </p>
                  {post.data.tags && (
                    <div class="flex flex-wrap gap-2">
                      {post.data.tags.map((tag) => (
                        <a
                          href={`/tags/${tag.toLowerCase().replace(/\s+/g, "-").replace(/[&]/g, "and")}`}
                          class="bg-slate-700 text-orange-300 px-3 py-1 rounded-full text-sm font-mono border border-orange-400/30 hover:bg-slate-600 transition-colors"
                        >
                          {tag}
                        </a>
                      ))}
                    </div>
                  )}
                </div>
              </div>
            </article>
          ))}
        </div>
      ) : (
        <div class="text-center py-12">
          <p class="text-green-300/70 text-lg">
            No articles found with this tag.
          </p>
        </div>
      )
    }
  </div>
</Layout>
