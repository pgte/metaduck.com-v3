---
import Layout from "../layouts/Layout.astro";
import { getCollection } from "astro:content";

const posts = await getCollection("blog");
const sortedPosts = posts.sort((a, b) => {
  const dateA = new Date(a.data.date);
  const dateB = new Date(b.data.date);
  return dateB.getTime() - dateA.getTime();
});
---

<Layout title="Blog - Metaduck">
  <div class="max-w-4xl mx-auto">
    <div
      class="flex flex-col md:flex-row md:items-center md:justify-between mb-8"
    >
      <h1
        class="text-4xl font-bold text-green-400 font-['Orbitron'] tracking-wider"
      >
        BLOG POSTS
      </h1>
      <a
        href="/tags"
        class="text-green-400 hover:text-green-300 transition-colors font-['Orbitron'] text-sm tracking-wide mt-4 md:mt-0 border border-green-400/30 px-4 py-2 rounded hover:border-green-400/50"
      >
        Browse by Tags
      </a>
    </div>

    <div class="grid gap-8">
      {
        sortedPosts.map((post) => (
          <article class="sci-fi-card">
            <div class="flex flex-col md:flex-row">
              {post.data.image && (
                <div class="md:w-1/3 overflow-hidden">
                  <img
                    src={post.data.image}
                    alt={post.data.title}
                    class="w-full h-48 md:h-full object-cover rounded-lg"
                  />
                </div>
              )}
              <div class={`${post.data.image ? "md:w-2/3" : "w-full"} p-6`}>
                <h2 class="text-2xl font-bold text-green-400 mb-3 font-['Orbitron'] tracking-wide">
                  <a
                    href={`/${post.slug}`}
                    class="hover:text-green-300 transition-colors"
                  >
                    {post.data.title}
                  </a>
                </h2>
                <div class="flex items-center text-green-300/70 mb-4 font-mono text-sm">
                  <span>{post.data.author}</span>
                  <span class="mx-2 text-orange-400">â€¢</span>
                  <time datetime={post.data.date.toISOString()}>
                    {new Date(post.data.date).toLocaleDateString("en-US", {
                      year: "numeric",
                      month: "long",
                      day: "numeric",
                    })}
                  </time>
                </div>
                <p class="text-green-300 mb-6 leading-relaxed">
                  {post.data.description}
                </p>
                {post.data.tags && (
                  <div class="flex flex-wrap gap-2">
                    {post.data.tags.map((tag) => (
                      <a
                        href={`/tags/${tag.toLowerCase().replace(/\s+/g, "-").replace(/[&]/g, "and")}`}
                        class="bg-slate-700 text-orange-300 px-3 py-1 rounded-full text-sm font-mono border border-orange-400/30 hover:bg-slate-600 transition-colors"
                      >
                        {tag}
                      </a>
                    ))}
                  </div>
                )}
              </div>
            </div>
          </article>
        ))
      }
    </div>
  </div>
</Layout>
